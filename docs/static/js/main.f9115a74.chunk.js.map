{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","content","r","row","_loop","i","push","squares","Game","_this","Object","_Users_jangalinski_IdeaProjects_jangalinski_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_jangalinski_IdeaProjects_jangalinski_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_jangalinski_IdeaProjects_jangalinski_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","nextPlayer","setState","concat","step","status","_this2","current","winner","moves","map","move","desc","key","jumpTo","handleClick","React","Component","lines","_lines$i","_Users_jangalinski_IdeaProjects_jangalinski_react_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9115a74.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) { return (\n    <button className=\"square\" onClick={props.onClick}>\n        {props.value}\n    </button>\n)}\n\nfunction Board(props) { \n    var content = []\n\n    for (let r=0; r<3; r++) {\n        let row = []\n        for (let i=r*3; i < r*3+3; i++) {\n            row.push  (\n                    <Square \n                        value={ props.squares[i] }\n                        onClick={() => props.onClick(i)}\n                    />\n                )\n        }\n    \n        content.push( <div className=\"board-row\">{row}</div>)\n    }\n    \n    return <div>{content}</div>\n}\n  \nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state={\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        }\n    }\n\n    nextPlayer() { return this.state.xIsNext ? 'X' : 'O' }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.nextPlayer();\n\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        })\n    }\n\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n\n        const moves = history.map((step, move) => {\n            const desc = move \n                ? 'Go to move #' + move\n                : 'Go to game start'\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n\n        let status;\n        if (winner === 'Draw') {\n            status = winner\n        }\n        else if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + this.nextPlayer();\n        }\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board \n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i) }\n                    />\n                </div>\n                <div className=\"game-info\">\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        )\n    }\n}\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    // if a player owns row, column or diagonal, he has won\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    // if no one won and at least one square is empty: no winner\n    for (let i=0; i<9; i++) {\n        if (!squares[i]) {\n            return null;\n        }\n    }\n    // on one won and board full: draw\n    return 'Draw';\n  }"],"sourceRoot":""}